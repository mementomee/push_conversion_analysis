#!/usr/bin/env python3
"""
–ü—Ä–∏–∫–ª–∞–¥ –∞–Ω–∞–ª—ñ–∑—É –∑ –≤–∫–ª—é—á–µ–Ω–Ω—è–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ—ó –≥—Ä—É–ø–∏
"""

import sys
import os
sys.path.insert(0, os.path.abspath('.'))

from src.data_loader import DataLoader
from src.analyzer import PushAnalyzer
import json

def run_complete_ab_analysis():
    """–ó–∞–ø—É—Å–∫–∞—î –ø–æ–≤–Ω–∏–π A/B –∞–Ω–∞–ª—ñ–∑ –∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ—é –≥—Ä—É–ø–æ—é"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ–≥–æ A/B –∞–Ω–∞–ª—ñ–∑—É –∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ—é –≥—Ä—É–ø–æ—é...")
    
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    data_loader = DataLoader(cache_enabled=True)
    analyzer = PushAnalyzer()
    
    # 1. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ—é –≥—Ä—É–ø–æ—é
    print("\nüìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö...")
    complete_df = data_loader.load_complete_dataset(include_control_group=True)
    
    # 2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó
    print("üí∞ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Å—ñ–π...")
    conversions_df = data_loader.load_conversion_data()
    
    # 3. –û–±'—î–¥–Ω—É—î–º–æ –¥–∞–Ω—ñ
    print("üîó –û–±'—î–¥–Ω–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö...")
    merged_df = analyzer.merge_data(complete_df, conversions_df)
    
    # 4. –ü—Ä–æ–≤–æ–¥–∏–º–æ A/B –∞–Ω–∞–ª—ñ–∑
    print("üìà A/B –∞–Ω–∞–ª—ñ–∑ –∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ—é –≥—Ä—É–ø–æ—é...")
    ab_stats = analyzer.ab_analysis(merged_df)
    
    # 5. –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å push-—Å–ø–æ–≤—ñ—â–µ–Ω—å
    print("üéØ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ push-—Å–ø–æ–≤—ñ—â–µ–Ω—å...")
    effectiveness = analyzer.calculate_push_effectiveness(ab_stats)
    
    # 6. –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    print("\n" + "="*80)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–ò A/B –ê–ù–ê–õ–Ü–ó–£ –ó –ö–û–ù–¢–†–û–õ–¨–ù–û–Æ –ì–†–£–ü–û–Æ")
    print("="*80)
    
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–∞—Ö:")
    print(ab_stats.to_string())
    
    if "error" not in effectiveness:
        print(f"\nüéØ –ï–§–ï–ö–¢–ò–í–ù–Ü–°–¢–¨ PUSH-–°–ü–û–í–Ü–©–ï–ù–¨:")
        print("-" * 50)
        
        control = effectiveness["control_group"]
        push_avg = effectiveness["push_groups_average"] 
        best = effectiveness["best_push_group"]
        summary = effectiveness["summary"]
        
        print(f"üë• –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞ –≥—Ä—É–ø–∞ (–±–µ–∑ push-—ñ–≤):")
        print(f"   –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {control['users']:,}")
        print(f"   –î–µ–ø–æ–∑–∏—Ç—ñ–≤: {control['deposits']:,}")
        print(f"   –ö–æ–Ω–≤–µ—Ä—Å—ñ—è: {control['conversion_rate']:.3f}%")
        print(f"   ARPU: ${control['arpu']:.4f}")
        
        print(f"\nüìà –°–µ—Ä–µ–¥–Ω—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å push-–≥—Ä—É–ø:")
        print(f"   –ö–æ–Ω–≤–µ—Ä—Å—ñ—è: {push_avg['conversion_rate']:.3f}%")
        print(f"   –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è: +{push_avg['improvement_vs_control']:.3f} –ø.–ø.")
        print(f"   –í—ñ–¥–Ω–æ—Å–Ω–µ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è: +{push_avg['relative_improvement_pct']:.1f}%")
        
        print(f"\nüèÜ –ù–∞–π–∫—Ä–∞—â–∞ push-–≥—Ä—É–ø–∞ ({best['group_id']}):")
        print(f"   –ö–æ–Ω–≤–µ—Ä—Å—ñ—è: {best['conversion_rate']:.3f}%")
        print(f"   –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è vs –∫–æ–Ω—Ç—Ä–æ–ª—å: +{best['improvement_vs_control']:.3f} –ø.–ø.")
        
        print(f"\n‚úÖ –í–ò–°–ù–û–í–û–ö:")
        if summary['push_effective']:
            print(f"   Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ï–§–ï–ö–¢–ò–í–ù–Ü!")
            print(f"   –°–µ—Ä–µ–¥–Ω—î –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è: +{summary['avg_lift_percentage_points']:.3f} –ø.–ø.")
            print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è: +{summary['best_lift_percentage_points']:.3f} –ø.–ø.")
        else:
            print(f"   Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ù–ï –ø–æ–∫–∞–∑—É—é—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –µ—Ñ–µ–∫—Ç—É")
    
    # 7. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    print(f"\nüíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤...")
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ CSV –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
    ab_stats.to_csv('outputs/final_results/ab_analysis_with_control.csv')
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ JSON –∑ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é
    with open('outputs/final_results/push_effectiveness_analysis.json', 'w', encoding='utf-8') as f:
        json.dump(effectiveness, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ outputs/final_results/")
    
    return ab_stats, effectiveness

if __name__ == "__main__":
    ab_stats, effectiveness = run_complete_ab_analysis()
    print("\nüéâ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")